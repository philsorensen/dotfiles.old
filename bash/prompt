# maintained by dotfiles - changes will be overwritten
#
# BASH prompt setup
#

VCPROMPT=''
XTITLE=''

# set thing based on TERM
case $TERM in
    xterm*)
	XTITLE='yes'
	;;
    screen*)
	XTITLE='yes'
	;;
    *)
      ;;
esac

# check for vcprompt
if ${HOME}/.local/bin/vcprompt >/dev/null 2>/dev/null; then VCPROMPT='yes'; fi

# turn off normal virtenv prompt 
export VIRTUAL_ENV_DISABLE_PROMPT="yes"


function __prompt_command {
    local path
    local venv
    local vcin
    local vc

    path=${PWD/#$HOME/\~}
    until [ ${#path} -lt 50 ]; do
	path="../${path#*/*/}"
    done

    [ -n "$XTITLE" ] && \
	echo -en "\n\033]0;${USER}@${HOSTNAME%%.*}:${path}\007"

    pver=$(python -V 2>&1 | sed -e 's/Python \([0-9].[0-9]\).*/\1/')
    if [ -n "${VIRTUAL_ENV}" ]; then
	venv=$(echo -ne " \033[31m$(basename ${VIRTUAL_ENV})(${pver})\033[0m")
    else
	venv=$(echo -ne " \033[31m${pver}\033[0m")
    fi

    if [ -n "${VCPROMPT}" ]; then
	vc=$(${HOME}/.local/bin/vcprompt -t 250 -f "%n:%b:%r:%m%u")
	if [ -n "$vc" ]; then
	    OIFS=$IFS; IFS=":"; set $vc; IFS=$OIFS

	    if [ "$1" == "git" ]; then
		vcin=$(echo -ne " \033[32m$2-${3:0:7}$4\033[0m")
	    else
		vcin=" $1:$2-$3$4"
	    fi
	fi
    fi

    ps1_info=$(echo -en "\033[34m[${path}\033[0m${venv}${vcin}\033[34m]\033[0m")
}


export PROMPT_COMMAND=__prompt_command
export PS1="\${ps1_info}\n\[\e[32;1m\]\u@\h\[\e[0m\] \\$ "
